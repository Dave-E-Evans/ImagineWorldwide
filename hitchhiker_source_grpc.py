# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: hitchhiker_source.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import hitchhiker_source_pb2


class HitchhikerSourceBase(abc.ABC):

    @abc.abstractmethod
    async def GetSourceId(self, stream: 'grpclib.server.Stream[hitchhiker_source_pb2.GetSourceIdRequest, hitchhiker_source_pb2.GetSourceIdReply]') -> None:
        pass

    @abc.abstractmethod
    async def GetDownloads(self, stream: 'grpclib.server.Stream[hitchhiker_source_pb2.GetDownloadsRequest, hitchhiker_source_pb2.GetDownloadsReply]') -> None:
        pass

    @abc.abstractmethod
    async def DownloadFile(self, stream: 'grpclib.server.Stream[hitchhiker_source_pb2.DownloadFileRequest, hitchhiker_source_pb2.DownloadFileReply]') -> None:
        pass

    @abc.abstractmethod
    async def MarkDelivered(self, stream: 'grpclib.server.Stream[hitchhiker_source_pb2.MarkDeliveredRequest, hitchhiker_source_pb2.MarkDeliveredReply]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/hitchhiker_source.HitchhikerSource/GetSourceId': grpclib.const.Handler(
                self.GetSourceId,
                grpclib.const.Cardinality.UNARY_UNARY,
                hitchhiker_source_pb2.GetSourceIdRequest,
                hitchhiker_source_pb2.GetSourceIdReply,
            ),
            '/hitchhiker_source.HitchhikerSource/GetDownloads': grpclib.const.Handler(
                self.GetDownloads,
                grpclib.const.Cardinality.UNARY_UNARY,
                hitchhiker_source_pb2.GetDownloadsRequest,
                hitchhiker_source_pb2.GetDownloadsReply,
            ),
            '/hitchhiker_source.HitchhikerSource/DownloadFile': grpclib.const.Handler(
                self.DownloadFile,
                grpclib.const.Cardinality.UNARY_UNARY,
                hitchhiker_source_pb2.DownloadFileRequest,
                hitchhiker_source_pb2.DownloadFileReply,
            ),
            '/hitchhiker_source.HitchhikerSource/MarkDelivered': grpclib.const.Handler(
                self.MarkDelivered,
                grpclib.const.Cardinality.UNARY_UNARY,
                hitchhiker_source_pb2.MarkDeliveredRequest,
                hitchhiker_source_pb2.MarkDeliveredReply,
            ),
        }


class HitchhikerSourceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetSourceId = grpclib.client.UnaryUnaryMethod(
            channel,
            '/hitchhiker_source.HitchhikerSource/GetSourceId',
            hitchhiker_source_pb2.GetSourceIdRequest,
            hitchhiker_source_pb2.GetSourceIdReply,
        )
        self.GetDownloads = grpclib.client.UnaryUnaryMethod(
            channel,
            '/hitchhiker_source.HitchhikerSource/GetDownloads',
            hitchhiker_source_pb2.GetDownloadsRequest,
            hitchhiker_source_pb2.GetDownloadsReply,
        )
        self.DownloadFile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/hitchhiker_source.HitchhikerSource/DownloadFile',
            hitchhiker_source_pb2.DownloadFileRequest,
            hitchhiker_source_pb2.DownloadFileReply,
        )
        self.MarkDelivered = grpclib.client.UnaryUnaryMethod(
            channel,
            '/hitchhiker_source.HitchhikerSource/MarkDelivered',
            hitchhiker_source_pb2.MarkDeliveredRequest,
            hitchhiker_source_pb2.MarkDeliveredReply,
        )
